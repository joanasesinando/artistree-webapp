html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*:before,
*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit;
}

body {
  background: get-color(bg, 1); /* Fallback for when there is no custom background color defined. */
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;

  &.is-boxed {
    background: white;
  }
}

hr {
  border: 0;
  @include divider-att();
  margin-top: 24px;
  margin-bottom: 24px;
}

ul, ol {
  margin-top: 0;
  margin-bottom: 24px;
  padding-left: 24px;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul,
li > ol {
  margin-bottom: 0;
}

dl {
  margin-top: 0;
  margin-bottom: 24px;
}

dt {
  @include font-weight-att(bold);
}

dd {
  margin-left: 24px;
  margin-bottom: 24px;
}

img {
  height: auto; /* Make sure images are scaled correctly. */
  max-width: 100%; /* Adhere to container width. */
  vertical-align: middle;
}

figure {
  margin: 24px 0; /* Extra wide images within figure tags don't overflow the content area. */
}

figcaption {
  @include font-size-att(7, mobile, true, true);
  padding: 8px 0;
}

img,
svg {
  display: block;
}

table {
  border-collapse: collapse;
  margin-bottom: 24px;
  width: 100%;
}

tr {
  border-bottom: 1px solid get-color(bg, 3);
}

th {
  text-align: left;
}

th,
td {
  padding: 10px 16px;

  &:first-child {
    padding-left: 0;
  }

  &:last-child {
    padding-right: 0;
  }
}

::-webkit-scrollbar {
  width: 8px;
  background-color: get-color(bg, 2);
}

::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.1);
  background-color: get-color(bg, 2);
  border-radius: 8px;
}

::-webkit-scrollbar-thumb {
  border-radius: 8px;
  background-image: -webkit-gradient(linear,
    40% 0%,
    85% 84%,
    from(get-color(typography, 3)),
    to(get-color(typography, 2)));

  &:hover {
    background-image: -webkit-gradient(linear,
      40% 0%,
      85% 84%,
      from(darken(get-color(typography, 3), 5)),
      to(darken(get-color(typography, 2), 5)));
  }
}
