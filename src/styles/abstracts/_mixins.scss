// --------------------------------------------------------------------------------------
// Font-size + Line-height + Kerning ----------------------------------------------------
// Usage example: @include font-size-att(1, mobile)
// Add more true/false args to control what to output: font-size, line-height, kerning
// --------------------------------------------------------------------------------------
@mixin font-size-att($size, $elem, $font-size: true, $line-height: false, $kerning: false, $adjust-font-size: 0) {
  @if not map-has-key(map-get($font__scale, $elem), $size) {
    @warn "'#{$size}' key does not exist in array!";
  }
  @if ( $font-size != false ) {
    font-size: get-font-size($size, $elem) + $adjust-font-size;
  }
  @if ( $line-height == true ) {
    line-height: get-line-height($size, $elem);
  }
  @if ( $kerning == true ) {
    letter-spacing: get-kerning($size, $elem);
  }
}

// -----------------------------------------------
// Font Family -----------------------------------
// Usage example: @include font-family-att(base)
// -----------------------------------------------
@mixin font-family-att($elem) {
  font-family: unquote(get-font-family($elem));
}

// -----------------------------------------------
// Font Weight -----------------------------------
// Usage example: @include font-weight-att(regular)
// -----------------------------------------------
@mixin font-weight-att($elem) {
  font-weight: get-font-weight($elem);
}

// -----------------------------------------------
// Anchor aspect ---------------------------------
// Usage example: @include anchor-aspect-att(main)
// Options: main, header, footer
// -----------------------------------------------
@mixin anchor-aspect-att($type: 'main') {
  @if ($type == 'main') { // Base
    color: inherit;
    text-decoration: underline;

    &:hover,
    &:active {
      outline: 0;
      text-decoration: none;
    }
  } @else if ($type == 'header') {
    color: get-color(typography, 2);
    text-transform: uppercase;
    text-decoration: none;

    &:hover,
    &:active {
      color: get-color(typography, 1);
    }
  } @else if ($type == 'footer') {
    color: get-color(typography, 2i);
    text-decoration: none;

    &:hover,
    &:active {
      color: get-color(typography, 1i);
      text-decoration: underline;
    }
  }
}

// -----------------------------------------------
// Shadow ----------------------------------------
// Usage example: @include shadow-att
// -----------------------------------------------
@mixin shadow-att {
  box-shadow: 0 16px 48px get-color(bg, 3);

  /* Edge fallback */
  @supports(-ms-ime-align:auto) {
    box-shadow: 0 16px 48px rgba(get-color(bg, 3), .12);
  }
}

// -----------------------------------------------
// Divider Mix -----------------------------------
// Usage example: helper for @mixin divider
// -----------------------------------------------
@mixin divider-mix {
  display: block;
  height: 1px;
  background: get-color(bg, 3);
  background: linear-gradient(to right, rgba(get-color(bg, 3), .1) 0, rgba(get-color(bg, 3), .6) 50%, rgba(get-color(bg, 3), .1) 100%);
}

// -----------------------------------------------
// Divider ---------------------------------------
// Usage example: @include divider-att(before)
// Options: before, after, 'no-arg'
// -----------------------------------------------
@mixin divider-att($type: false) {
  @if ( $type == 'before' ) {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      @include divider-mix;
    }
  } @else if ($type == 'after') {
    position: relative;

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      @include divider-mix;
    }
  } @else {
    @include divider-mix;
  }
}
